// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WoundClinic_WPF.Data;

#nullable disable

namespace WoundClinic_WPF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250520224647_initializedb")]
    partial class initializedb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationRoleApplicationUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<long>("UsersNationalCode")
                        .HasColumnType("bigint");

                    b.HasKey("RolesId", "UsersNationalCode");

                    b.HasIndex("UsersNationalCode");

                    b.ToTable("ApplicationRoleApplicationUser");

                    b.HasData(
                        new
                        {
                            RolesId = 1,
                            UsersNationalCode = 1285046358L
                        });
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleDescription = "مدیر سیستم",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleDescription = "سوپروایزور",
                            RoleName = "Supervisor"
                        },
                        new
                        {
                            Id = 3,
                            RoleDescription = "کاربر",
                            RoleName = "user"
                        });
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.ApplicationUser", b =>
                {
                    b.Property<long>("NationalCode")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalCode");

                    b.ToTable("ApplicationUsers");

                    b.HasData(
                        new
                        {
                            NationalCode = 1285046358L,
                            IsActive = true,
                            PasswordHash = "18bd4ebd1a9436142d16224c33327a9b8323ac8949af256d1c37930c6308b2db"
                        });
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.Dressing", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("DressingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HasConstPrice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrug")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dressings");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.DressingCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("DressingId")
                        .HasColumnType("tinyint");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.Property<int>("WoundCareId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DressingId");

                    b.HasIndex("WoundCareId");

                    b.ToTable("DressingCares");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.Patient", b =>
                {
                    b.Property<long>("NationalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MobileNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("NationalCode");

                    b.HasIndex("UserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.Person", b =>
                {
                    b.Property<long>("NationalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NationalCode");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            NationalCode = 1285046358L,
                            FirstName = "داود",
                            Gender = true,
                            LastName = "اقاویل جهرمی"
                        });
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.WoundCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("UserId");

                    b.ToTable("WoundCares");
                });

            modelBuilder.Entity("ApplicationRoleApplicationUser", b =>
                {
                    b.HasOne("WoundClinic_WPF.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WoundClinic_WPF.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersNationalCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.ApplicationUser", b =>
                {
                    b.HasOne("WoundClinic_WPF.Models.Person", "Person")
                        .WithOne("ApplicationUser")
                        .HasForeignKey("WoundClinic_WPF.Models.ApplicationUser", "NationalCode")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.DressingCare", b =>
                {
                    b.HasOne("WoundClinic_WPF.Models.Dressing", "Dressing")
                        .WithMany("DressingCares")
                        .HasForeignKey("DressingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WoundClinic_WPF.Models.WoundCare", "WoundCare")
                        .WithMany("DressingCares")
                        .HasForeignKey("WoundCareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dressing");

                    b.Navigation("WoundCare");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.Patient", b =>
                {
                    b.HasOne("WoundClinic_WPF.Models.Person", "Person")
                        .WithOne("Patient")
                        .HasForeignKey("WoundClinic_WPF.Models.Patient", "NationalCode")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WoundClinic_WPF.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Patients")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.WoundCare", b =>
                {
                    b.HasOne("WoundClinic_WPF.Models.Patient", "Patient")
                        .WithMany("WoundCares")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WoundClinic_WPF.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("WoundCares")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.ApplicationUser", b =>
                {
                    b.Navigation("Patients");

                    b.Navigation("WoundCares");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.Dressing", b =>
                {
                    b.Navigation("DressingCares");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.Patient", b =>
                {
                    b.Navigation("WoundCares");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.Person", b =>
                {
                    b.Navigation("ApplicationUser");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("WoundClinic_WPF.Models.WoundCare", b =>
                {
                    b.Navigation("DressingCares");
                });
#pragma warning restore 612, 618
        }
    }
}
